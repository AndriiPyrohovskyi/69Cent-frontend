document.addEventListener('DOMContentLoaded', () => {
    const phpTokenElement = document.getElementById('php-auth-token');
    if (phpTokenElement) {
        const phpToken = phpTokenElement.dataset.token;
        if (phpToken && !localStorage.getItem('authToken')) { // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ç–æ–∫–µ–Ω –≤–∂–µ —î –≤ localStorage
            localStorage.setItem('authToken', phpToken);
            console.log('–¢–æ–∫–µ–Ω –∑ PHP –∑–±–µ—Ä–µ–∂–µ–Ω–æ:', phpToken);
        }
    }

    getCurrentUser();
    maybeRefreshToken();
    setInterval(maybeRefreshToken, 60 * 1000); // –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —â–æ—Ö–≤–∏–ª–∏–Ω–∏

    const logoutLink = document.getElementById('logout-link');
    const loginLink = document.getElementById('login-link');
    const registerLink = document.getElementById('register-link');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —Ç–æ–∫–µ–Ω
    const authToken = localStorage.getItem('authToken');
    if (authToken) {
        // –ü–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É "Logout" —ñ —Ö–æ–≤–∞—î–º–æ "Login" —Ç–∞ "Register"
        logoutLink.style.display = 'inline';
        loginLink.style.display = 'none';
        registerLink.style.display = 'none';
    }

    // –û–±—Ä–æ–±–∫–∞ –∫–ª—ñ–∫—É –Ω–∞ "Logout"
    logoutLink.addEventListener('click', (e) => {
        e.preventDefault();
        handleLogout();
    });
});

function isTokenExpiringSoon(token) {
    try {
        const payload = JSON.parse(atob(token.split('.')[1]));
        const expiry = payload.exp * 1000;
        const now = Date.now();
        return (expiry - now) < 5 * 60 * 1000;
    } catch (e) {
        return true;
    }
}

function maybeRefreshToken() {
    const authToken = localStorage.getItem('authToken');
    if (!authToken) return;
    if (isTokenExpiringSoon(authToken)) {
        refreshToken();
    }
}

async function getCurrentUser() {
    const authToken = localStorage.getItem('authToken');
    if (!authToken) {
        console.log('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π');
        return;
    }
    if (authToken.split('.').length !== 3) {
        console.log('–ù–µ–≤–∞–ª—ñ–¥–Ω–∏–π —Ç–æ–∫–µ–Ω');
        localStorage.removeItem('authToken');
        return;
    }

    try {
        const response = await fetch('http://69centapi.local/api/current_user', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${authToken}`,
            },
        });

        if (!response.ok) throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');

        const currentUser = await response.json();
        console.log('–ü–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:', currentUser);

        updateHeaderWithUser(currentUser.username);
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error.message);
        localStorage.removeItem('authToken');
    }
}


async function refreshToken() {
    const authToken = localStorage.getItem('authToken');
    if (!authToken) return;

    try {
        const response = await fetch('http://69centapi.local/api/refresh_token', {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${authToken}`,
            },
        });

        if (!response.ok) throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω');

        const data = await response.json();
        localStorage.setItem('authToken', data.token);
        console.log('–¢–æ–∫–µ–Ω –æ–Ω–æ–≤–ª–µ–Ω–æ');
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞:', error.message);
        localStorage.removeItem('authToken');
    }
}

function updateHeaderWithUser(username) {
    const secondNav = document.querySelectorAll('header nav')[1];
    if (!secondNav) return;

    if (username) {
        secondNav.innerHTML = `
            <ul>
                <li><a href="/pages/Profile/profile.php"><span>üë§ ${username}</span></a></li>
                <li><a href="#" id="logout-link">Logout</a></li>
            </ul>
        `;
    } else {
        secondNav.innerHTML = `
            <ul>
                <li><a href="/pages/Login/login.php" id="login-link">Login</a></li>
                <li><a href="/pages/Register/register.php" id="register-link">Register</a></li>
            </ul>
        `;
    }

    const logoutLink = document.getElementById('logout-link');
    if (logoutLink) {
        logoutLink.addEventListener('click', (e) => {
            e.preventDefault();
            handleLogout();
        });
    }
}

async function handleLogout() {
    const authToken = localStorage.getItem('authToken');
    localStorage.removeItem('authToken');
    const phpTokenElement = document.getElementById('php-auth-token');
    if (phpTokenElement) {
        phpTokenElement.remove();
    }

    try {
        await fetch('http://69centapi.local/api/logout', {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${authToken}`,
            },
        });
        console.log('–í–∏—Ö—ñ–¥ –≤–∏–∫–æ–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≤–∏—Ö–æ–¥—É:', error.message);
    }
    document.cookie = "PHPSESSID=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
    updateHeaderWithUser(null);
    window.location.href = '/pages/Login/login.php';
}

async function handleLoginSuccess(token) {
    localStorage.setItem('authToken', token);
    console.log('–¢–æ–∫–µ–Ω –∑–±–µ—Ä–µ–∂–µ–Ω–æ:', token);

    // –í–∏–∫–ª–∏–∫–∞—î–º–æ getCurrentUser –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ö–µ–¥–µ—Ä–∞
    await getCurrentUser();

    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
    window.location.href = '/index.php';
}
